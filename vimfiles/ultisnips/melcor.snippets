
# Melcor Input

snippet PROGRAM "Melcor Input" b
PROGRAM MELGEN

EXEC_INPUT
EXEC_TITLE   '${1:#TITLE}'
EXEC_TSTART  ${2:0.0}
EXEC_DTTIME  ${3:0.1}

MP_INPUT
MP_ID  Concrete
MP_ID  Stainless-Steel

NCG_INPUT
NCG_ID  N2
NCG_ID  O2

CVH_INPUT
$0

FL_INPUT

HS_INPUT

CF_INPUT

TF_INPUT

END PROGRAM MELGEN

PROGRAM MELCOR

EXEC_INPUT
EXEC_TITLE    '$1'
EXEC_TIME     2
              !  TIME  DTMAX  DTMIN  DTEDT  DTPLT  DTRST
              1  $2  ${4:#DTMAX}  ${5:#DTMIN}  ${6:#DTEDT}  ${7:#DTPLT}  ${8:#DTRST}
              2  ${9:`!p
try:    snip.rv = "0.0" if float(t[2]) < 0 else "#TIME"
except: snip.rv = "#TIME"
                     `}  ${10:$4}  ${11:$5}  ${12:$6}  ${13:$7}  ${14:$8}
EXEC_TEND     ${15:#TEND}
EXEC_CPULIM   ${16:3600.0}
EXEC_CPULEFT  60.0

END PROGRAM MELCOR
endsnippet

# Control Volume

post_jump "expand_control_volume(snip.tabstops[5].current_text) if snip.tabstop == 0 else None"
snippet CV_ID "Control Volume" b
CV_ID   '${1:#NAME}'  ${2:#NO}
CV_FLD  ${3|Water,LBE|}
CV_THR  NonEquil  Fog  ${4|Active,Time-Indep,Prop-Specified|}
CV_PAS  Separate  ${5|OnlyPool,OnlyAtm,PoolAndAtm|}
endsnippet

global !p
def expand_control_volume(phase):
    pol = True if phase != "OnlyAtm"    else False
    atm = True if phase != "OnlyPool"   else False
    bnd = True if phase == "PoolAndAtm" else False
    snippet  = ("  Subcooled" if pol else "") + ("  Superheated" if atm else "")
    snippet += "\nCV_PTD  PVOL  ${1:#PVOL}"
    snippet += "\nCV_PAD        ${2:#TPOL}"    if pol else ""
    snippet += "\nCV_AAD  TATM  ${3:#TATM}"    if atm else ""
    snippet += "\nCV_NCG  2  RHUM  ${4:#RHUM}" if atm else ""
    snippet += "\n        1   N2   0.79"       if atm else ""
    snippet += "\n        2   O2   0.21"       if atm else ""
    snippet += "\nCV_BND  ZPOL  ${5:#ZPOL}"    if bnd else ""
    snippet += "\nCV_VAT  2"
    snippet += "\n        1  ${6:#ZLW}  0.0"
    snippet += "\n        2  ${7:#ZHI}  ${8:#VOL}"
    snip.expand_anon(snippet)
endglobal

# Flow Path

snippet FL_ID "Flow Path" bs
FL_ID   '${1:#NAME}'  ${2:#NO}
FL_FT   '${3:#CVFM}'  '${4:#CVTO}'  ${5:#ZFM}  ${6:`!p snip.rv = "#ZTO" if t[5] == "#ZFM" else t[5]`}
FL_GEO  ${7:#AREA}  ${8:#LEN}  ${9:#OPEN}${10:  ${11:#HFM}  ${12:`!p snip.rv = "#HTO" if t[11] == "#HFM" else t[11]`}}${13:
FL_JLF  ${14:#ZBFM}  ${15:#ZTFM}}${16:
FL_JLT  ${17:#ZBTO}  ${18:#ZTTO}}
FL_JSW  ${19|0,3|}  NoBubbleRise  NoBubbleRise ! 0-vertical 3-horizontal${20:
FL_USL  ${21:#LOSF}  ${22:`!p snip.rv = "#LOSR" if t[21] == "#LOSF" else t[21]`}${23:  ${24:#CHKF}  ${25:`!p snip.rv = "#CHKR" if t[24] == "#CHKF" else t[24]`}}}
FL_SEG  2
        1  ${26:`!p snip.rv = "#SARA" if t[7] == "#AREA" else t[7]`}  ${27:`!p
try:    snip.rv = float(t[8]) / 2
except: snip.rv = "#SLEN"                                                  `}  ${28:`!p
import math
try:    snip.rv = 2 * math.sqrt(float(t[7]) / math.pi); snip.rv = f"{snip.rv:.6g}" if "." in f"{snip.rv:.6g}" else f"{snip.rv:.1f}"
except: snip.rv = "#SHYD"                                                           `}  ${29:#SRGH}
        2  ${30:$26}  ${31:$27}  ${32:$28}  ${33:$29}
endsnippet

snippet FL_VLV "Valve" b
FL_VLV  1
        1  '${1:#VLVNAME}'  '${2:#FLNAME}'  NoTrip  '${3:#CFNAME}'
endsnippet

snippet FL_PMP "Pump" b
FL_PMP  1
        1  '${1:#PMPNAME}'  '${2:#FLNAME}'  Quick-CF  '${3:#CFNAME}'
endsnippet

snippet FL_VTM "Velocity" b
FL_VTM  1
        1  '${1:#FLNAME}'  ${2|CF,TF|}  '${3:`!p snip.rv = "#CFNAME" if t[2] == "CF" else "#TFNAME" if t[2] == "TF" else "#CFTFNAME"`}'
endsnippet

# Heat Structure

post_jump "expand_heat_structure(snip.tabstops[6].current_text) if snip.tabstop == 0 else None"
snippet HS_ID "Heat Structure" b
HS_ID   '${1:#NAME}'  ${2:#NO}
HS_GD   ${3|Rectangular,Cylindrical,Spherical,BottomHalfSphere,TopHalfSphere|}  Yes
HS_EOD  ${4:#ALT}  ${5:#ALP}
HS_SRC  ${6|No,CF,TF|}
endsnippet

global !p
def expand_heat_structure(source):
    snippet  = "  '${1:#CFNAME}'  1.0" if source == "CF" else "  '${1:#TFNAME}' 1.0" if source == "TF" else ""
    snippet += "\nHS_ND   ${2:#NN}  2"
    snippet += "\n        1  1  ${3:#XL}  ${4:#TL}  ${5:#MAT}"
    snippet += "  `!p\ntry:    snip.rv = 1 / (float(t[2]) - 1)\nexcept: snip.rv = \"1.0\"`" if source != "No" else ""
    snippet += "\n        2  $2  ${6:#XR}  ${7:`!p snip.rv = \"#TR\" if t[4] == \"#TL\" else t[4]`}"
    snippet += "\nHS_FT   Off"
    snip.expand_anon(snippet)
endglobal

post_jump "expand_heat_structure_boundary(match[0], snip.tabstops[1].current_text) if snip.tabstop == 0 else None"
snippet "HS_[LR]B" "Heat Structure Boundary" br
`!p snip.rv = match[0]`   ${1|Symmetry,CalcCoefHS,SourTimeTF,TempTimeTF,FluxTimeTF,CoefTimeTF,CoefTempTF,CoefCF,SourCF,TempCF,FluxCF|}
endsnippet

global !p
def expand_heat_structure_boundary(side, bctype):
    snippet  = "  '${1:#CFNAME}'" if bctype in ("CoefCF", "SourCF", "TempCF", "FluxCF") else "  '${1:#TFNAME}'" if bctype in ("SourTimeTF", "TempTimeTF", "FluxTimeTF", "CoefTimeTF", "CoefTempTF") else ""
    snippet += "" if bctype in ("Symmetry", "TempTimeTF", "TempCF") else "  '${2:#CVNAME}'"
    snippet += "" if bctype in ("Symmetry", "TempTimeTF", "FluxTimeTF", "TempCF", "FluxCF") else "  ${3|Yes,No|}"
    snippet += "\n" + side + "P" + ("  Int" if side == "HS_LB" else "  Ext") + "  0.05  0.95"
    snippet += "" if bctype in ("Symmetry", "TempTimeTF", "TempCF") else "\n" + side + "S  ${4:#AREA}  ${5:#CLEN}  ${6:#ALEN}"
    snip.expand_anon(snippet)
endglobal

# Control Function

post_jump "expand_control_function(snip.tabstops[3].current_text) if snip.tabstop == 0 else None"
snippet CF_ID "Control Function" b
CF_ID   '${1:#NAME}'  ${2:#NO}  ${3|Equals,Add,Dim,Multiply,Divide,Tab-Fun,Formula,Open-At,Close-At|}
endsnippet

global !p
def expand_control_function(cftype):
    if cftype in ("Open-At", "Close-At"):
        offset = -6     if cftype == "Open-At" else -7
        scal   = "-0.5" if cftype == "Open-At" else "0.5"
        init   =  "0.0" if cftype == "Open-At" else "1.0"
        snip.buffer[snip.line] = snip.buffer[snip.line][:snip.column + offset]
        snippet  = "SignI"
        snippet += "\nCF_SAI  " + scal + "  0.5  " + init
        snippet += "\nCF_ARG  1"
        snippet += "\n        1  EXEC-TIME  -1.0  ${1:#TIME}"
    else:
        arg = 0 if cftype == "Formula" else 1 if cftype in ("Equals", "Tab-Fun") else 2
        snippet  = "${1:" if arg == 0 else ""
        snippet += "\nCF_SAI  ${2:#SCAL}  ${3:#ADCN}  ${4:#INIT}" + ("}" if arg == 0 else "")
        snippet += "${5:"
        snippet += "\nCF_ULB  ${6|LW,UP,BOTH|}  ${7:#LW}  ${8:#UP}" + "}"
        snippet += "\nCF_MSC  '${9:#TFNAME}'" if cftype == "Tab-Fun" else ""
        snippet += "\nCF_ARG  " + str(arg)                             if arg >  0 else ""
        snippet += "\n        1  ${10:#ARG}  ${11:#ARSC}  ${12:#ARAD}" if arg >= 1 else ""
        snippet += "\n        2  ${13:#ARG}  ${14:#ARSC}  ${15:#ARAD}" if arg >= 2 else ""
        snippet += "\nCF_FORMULA  3  ${16:#FORMULA}"      if arg == 0 else ""
        snippet += "\n            1  ${17:X}  ${18:#ARG}" if arg == 0 else ""
        snippet += "\n            2  ${19:Y}  ${20:#ARG}" if arg == 0 else ""
        snippet += "\n            3  ${21:Z}  ${22:#ARG}" if arg == 0 else ""
    snip.expand_anon(snippet)
endglobal

# Tabular Function

snippet TF_ID "Tabular Function" b
TF_ID   '${1:#NAME}'  ${2:#SCAL}  ${3:#ADCN}${4:
TF_BND  ${5|Const-Bnd,Extrapol-Bnd,Err-Bnd|}  ${6|Const-Bnd,Extrapol-Bnd,Err-Bnd|}}
TF_TAB  1
        1  ${7:#X}  ${8:#Y}
endsnippet

